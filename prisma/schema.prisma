generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Blog {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  title     String    @db.VarChar(255) 
  excerpt   String
  content   String    @unique
  thumbnail String?
  topicId   Int
  likes     Int       @default(0)
  topic     Topic     @relation(fields: [topicId], references: [id])
  comments  Comment[]

  @@index([topicId])  // Index for faster filtering by topic
  @@index([likes])    // Todo: Index for sorting by likes 
}

model Topic {
  id    Int    @id @default(autoincrement())
  name  String @unique 
  blogs Blog[]
}

model Comment {
  id        Int       @id @default(autoincrement())
  blogId    Int       // Foreign key to Blog
  comment   String
  likes     Int       @default(0)  // Default value for likes
  userId    Int       // Foreign key to User
  parentId  Int?      // Nullable, indicates if this comment is a reply to another comment
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt @default(now())

  blog      Blog      @relation(fields: [blogId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
  parent    Comment?  @relation("CommentReplies", fields: [parentId], references: [id])
  replies   Comment[] @relation("CommentReplies")
}

model User {
  id       Int       @id @default(autoincrement())
  name     String
  comments Comment[] // Updated to match naming conventions (plural)
}
